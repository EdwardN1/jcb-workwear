.variation-radios {
  /*
 * Hide the inputs.
 */

  padding-bottom: 3rem;

  input {
    display: none;
  }


  /*
   * Then, style the label so it looks like however you want.
   * Here's a quick rundown of how I did it here:
   */


  /*
   * Some basic positioning styles, and we give it the pointer cursor to show
   * that it's clickable
   */

  label {
    display: inline-block;
    padding: 5px 10px;
    cursor: pointer;
    span {
      position: relative;
      line-height: 55px;
      font-family: "Heebo", sans-serif;
      font-weight: bold;
      text-transform: uppercase;
      &:before, &:after {
        content: '';
      }
      &:before {
        /*border: 1px solid #222021;*/
        width: 55px;
        height: 55px;
        margin-right: 10px;
        display: inline-block;
        vertical-align: top;
        background-color: $black;
      }
      &:after {
        background-image: url("../images/Tick.png");
        background-repeat: no-repeat;
        background-position: center center;
        width: 55px;
        height: 55px;
        position: absolute;
        top: -18px;
        left: 0;
        transition: 300ms;
        opacity: 0;
        content: " ";
        display: block;
        z-index: 1;
      }
    }
  }


  /*
   * With how I decided to build this, the position: relative is super important.
   * We're going to position a pseudo element within this element(As it is the containing box)
   */



  /*
   * Because we're using pseudo elements, a content property is required to make them appear.
   */




  /*
   * We are using the :before peudo elemnt as the actual button,
   * then we'll position the :after over it. You could also use a background-image,
   * font-icon, or really anything if you want different styles.
   * For the specific style we're going for, this approach is simply the easiest, but
   * once you understand the concept you can really do it however you like.
   */


  /*
   * This is the most important part of this whole file, if you understand what's happening here
   * you can really make this in so many different ways.
   *
   * We start by selecting the input inside of the label, with "label input". From there we use the
   * ":checked" selector to *only* select the input when it is checked. We then use the immediate sibling
   * selector(+) to select the span, and then it's pseudo element :after(What we are using to mark the button)
   * Because we already styled the :after, all we have to do is set the opacity to 1, making it fade in.
   */
  label input:checked+span:after {
    opacity: 1;
  }


}

.reset_variations {
  display: none !important;
  visibility: hidden !important;
}